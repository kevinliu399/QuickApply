{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/auth/'; // Replace with your backend URL\n\nconst login = async (username, password) => {\n  const response = await axios.post(API_URL + 'login', {\n    username,\n    password\n  }, {\n    withCredentials: true\n  });\n  if (response.data.jwt) {\n    const user = {\n      ...response.data.user,\n      accessToken: response.data.jwt\n    };\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  return response.data;\n};\nconst logout = () => {\n  localStorage.removeItem('user');\n};\nconst getCurrentUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\nexport default {\n  login,\n  logout,\n  getCurrentUser\n};","map":{"version":3,"names":["axios","API_URL","login","username","password","response","post","withCredentials","data","jwt","user","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","getItem","parse"],"sources":["/Users/coreyzhao/quickapply-frontend/frontend/src/services/authService.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/auth/'; // Replace with your backend URL\n\ninterface User {\n  id: string;\n  username: string;\n  password: string;\n  email: string;\n  commonLinks: any[];\n  jobIds: any[];\n  authorities: { authority: string }[];\n  userId: {\n    timestamp: number;\n    date: string;\n  };\n  accountNonExpired: boolean;\n  accountNonLocked: boolean;\n  credentialsNonExpired: boolean;\n  enabled: boolean;\n  accessToken?: string;\n}\n\ninterface AuthResponse {\n  user: User;\n  jwt: string;\n}\n\nconst login = async (username: string, password: string): Promise<AuthResponse> => {\n  const response = await axios.post<AuthResponse>(API_URL + 'login', { username, password }, { withCredentials: true });\n  if (response.data.jwt) {\n    const user = {\n      ...response.data.user,\n      accessToken: response.data.jwt\n    };\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  return response.data;\n};\n\nconst logout = (): void => {\n  localStorage.removeItem('user');\n};\n\nconst getCurrentUser = (): AuthResponse | null => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) as AuthResponse : null;\n};\n\nexport default {\n  login,\n  logout,\n  getCurrentUser\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B,CAAC,CAAC;;AA0B/C,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAA4B;EACjF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAeL,OAAO,GAAG,OAAO,EAAE;IAAEE,QAAQ;IAAEC;EAAS,CAAC,EAAE;IAAEG,eAAe,EAAE;EAAK,CAAC,CAAC;EACrH,IAAIF,QAAQ,CAACG,IAAI,CAACC,GAAG,EAAE;IACrB,MAAMC,IAAI,GAAG;MACX,GAAGL,QAAQ,CAACG,IAAI,CAACE,IAAI;MACrBC,WAAW,EAAEN,QAAQ,CAACG,IAAI,CAACC;IAC7B,CAAC;IACDG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;EACpD;EACA,OAAOL,QAAQ,CAACG,IAAI;AACtB,CAAC;AAED,MAAMQ,MAAM,GAAGA,CAAA,KAAY;EACzBJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAA,KAA2B;EAChD,MAAMR,IAAI,GAAGE,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOT,IAAI,GAAGI,IAAI,CAACM,KAAK,CAACV,IAAI,CAAC,GAAmB,IAAI;AACvD,CAAC;AAED,eAAe;EACbR,KAAK;EACLc,MAAM;EACNE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
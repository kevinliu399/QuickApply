{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\Documents\\\\GitHub\\\\quickapply-frontend\\\\frontend\\\\src\\\\components\\\\MainGrid\\\\ListingCardGrid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport ListingCard from './ListingCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/jobs'; // Change at production\n\nconst ListingCardGrid = () => {\n  _s();\n  const [listings, setListings] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  //   const fetchListings = async () => {\n  //     try {\n  //       const response = await fetch(API_URL);\n  //       const data = await response.json();\n  //       setListings(data);\n  //       setLoading(false);\n  //     } catch (error) {\n  //       console.error('Error fetching listings:', error);\n  //       setLoading(false);\n  //     }\n  //   };\n\n  //   fetchListings();\n  // }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: listings.map((listing, index) => /*#__PURE__*/_jsxDEV(ListingCard, {\n      title: listing.title,\n      company: listing.company,\n      isChecked: listing.isChecked,\n      isEditing: listing.isEditing,\n      color: listing.status\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ListingCardGrid, \"C4sI1F4zqUlb8Up/mMAzuZU8juM=\");\n_c = ListingCardGrid;\nexport default ListingCardGrid;\nvar _c;\n$RefreshReg$(_c, \"ListingCardGrid\");","map":{"version":3,"names":["React","useState","Box","ListingCard","jsxDEV","_jsxDEV","API_URL","ListingCardGrid","_s","listings","setListings","loading","setLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","map","listing","index","title","company","isChecked","isEditing","color","status","_c","$RefreshReg$"],"sources":["C:/Users/Kevin/Documents/GitHub/quickapply-frontend/frontend/src/components/MainGrid/ListingCardGrid.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport ListingCard from './ListingCard';\r\n\r\nconst API_URL = 'http://localhost:8080/jobs'; // Change at production\r\n\r\ninterface Listing {\r\n  title: string;\r\n  company: string;\r\n  isChecked: boolean;\r\n  isEditing: boolean;\r\n  status: 'red' | 'green' | 'yellow';\r\n}\r\n\r\nconst ListingCardGrid: React.FC = () => {\r\n  const [listings, setListings] = useState<Listing[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchListings = async () => {\r\n  //     try {\r\n  //       const response = await fetch(API_URL);\r\n  //       const data = await response.json();\r\n  //       setListings(data);\r\n  //       setLoading(false);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching listings:', error);\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchListings();\r\n  // }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      {listings.map((listing, index) => (\r\n        <ListingCard\r\n          key={index}\r\n          title={listing.title}\r\n          company={listing.company}\r\n          isChecked={listing.isChecked}\r\n          isEditing={listing.isEditing}\r\n          color={listing.status}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListingCardGrid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,SAASC,GAAG,QAAQ,eAAe;AACnC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAG,4BAA4B,CAAC,CAAC;;AAU9C,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,IAAIU,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEZ,OAAA,CAACH,GAAG;IAAAW,QAAA,EACDJ,QAAQ,CAACS,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3Bf,OAAA,CAACF,WAAW;MAEVkB,KAAK,EAAEF,OAAO,CAACE,KAAM;MACrBC,OAAO,EAAEH,OAAO,CAACG,OAAQ;MACzBC,SAAS,EAAEJ,OAAO,CAACI,SAAU;MAC7BC,SAAS,EAAEL,OAAO,CAACK,SAAU;MAC7BC,KAAK,EAAEN,OAAO,CAACO;IAAO,GALjBN,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACT,EAAA,CAtCID,eAAyB;AAAAoB,EAAA,GAAzBpB,eAAyB;AAwC/B,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\Documents\\\\GitHub\\\\quickapply-frontend\\\\frontend\\\\src\\\\components\\\\MainGrid\\\\NewListingForm.tsx\";\nimport React from 'react';\nimport { Box, Fab } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport ListingCardGrid from './ListingCardGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/jobs'; // Change at production\n\nconst NewListingForm = () => {\n  const handleAddListing = async () => {\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: 'New Job',\n          company: 'New Company',\n          isChecked: false,\n          isEditing: false,\n          color: 'yellow'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Handle the response if needed\n      const data = await response.json();\n      console.log('New listing added', data);\n    } catch (error) {\n      console.error('Error adding new listing:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(ListingCardGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      onClick: handleAddListing,\n      sx: {\n        position: 'fixed',\n        bottom: 40,\n        right: 40,\n        backgroundColor: 'white',\n        border: '4px solid #67FFA4',\n        color: 'black',\n        '&:hover': {\n          backgroundColor: 'white'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {\n        sx: {\n          color: 'black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = NewListingForm;\nexport default NewListingForm;\nvar _c;\n$RefreshReg$(_c, \"NewListingForm\");","map":{"version":3,"names":["React","Box","Fab","AddIcon","ListingCardGrid","jsxDEV","_jsxDEV","API_URL","NewListingForm","handleAddListing","response","fetch","method","headers","body","JSON","stringify","title","company","isChecked","isEditing","color","ok","Error","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","position","bottom","right","backgroundColor","border","_c","$RefreshReg$"],"sources":["C:/Users/Kevin/Documents/GitHub/quickapply-frontend/frontend/src/components/MainGrid/NewListingForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Fab } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport ListingCardGrid from './ListingCardGrid';\r\n\r\nconst API_URL = 'http://localhost:8080/jobs'; // Change at production\r\n\r\ninterface Listing {\r\n  title: string;\r\n  company: string;\r\n  isChecked: boolean;\r\n  isEditing: boolean;\r\n  color: 'red' | 'green' | 'yellow';\r\n}\r\n\r\ninterface ListingCardGridProps {\r\n  listings: Listing[];\r\n}\r\n\r\nconst NewListingForm: React.FC = () => {\r\n  \r\n  const handleAddListing = async () => {\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          title: 'New Job',\r\n          company: 'New Company',\r\n          isChecked: false,\r\n          isEditing: false,\r\n          color: 'yellow',\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      // Handle the response if needed\r\n      const data = await response.json();\r\n      console.log('New listing added', data);\r\n    } catch (error) {\r\n      console.error('Error adding new listing:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ListingCardGrid />\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        onClick={handleAddListing}\r\n        sx={{\r\n          position: 'fixed',\r\n          bottom: 40,\r\n          right: 40,\r\n          backgroundColor: 'white',\r\n          border: '4px solid #67FFA4',\r\n          color: 'black',\r\n          '&:hover': {\r\n            backgroundColor: 'white',\r\n          },\r\n        }}\r\n      >\r\n        <AddIcon sx={{ color: 'black' }} />\r\n      </Fab>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NewListingForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,SAASC,GAAG,EAAEC,GAAG,QAAQ,eAAe;AACxC,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAG,4BAA4B,CAAC,CAAC;;AAc9C,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAErC,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,EAAE;QACpCK,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE,SAAS;UAChBC,OAAO,EAAE,aAAa;UACtBC,SAAS,EAAE,KAAK;UAChBC,SAAS,EAAE,KAAK;UAChBC,KAAK,EAAE;QACT,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA;MACA,MAAMC,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;IACxC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEtB,OAAA,CAACL,GAAG;IAAA4B,QAAA,gBACFvB,OAAA,CAACF,eAAe;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnB3B,OAAA,CAACJ,GAAG;MACFmB,KAAK,EAAC,SAAS;MACf,cAAW,KAAK;MAChBa,OAAO,EAAEzB,gBAAiB;MAC1B0B,EAAE,EAAE;QACFC,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,eAAe,EAAE,OAAO;QACxBC,MAAM,EAAE,mBAAmB;QAC3BnB,KAAK,EAAE,OAAO;QACd,SAAS,EAAE;UACTkB,eAAe,EAAE;QACnB;MACF,CAAE;MAAAV,QAAA,eAEFvB,OAAA,CAACH,OAAO;QAACgC,EAAE,EAAE;UAAEd,KAAK,EAAE;QAAQ;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACQ,EAAA,GApDIjC,cAAwB;AAsD9B,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/coreyzhao/quickapply-frontend/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.tsx\nimport React, { createContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  user: null\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser();\n    setUser(currentUser);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","user","AuthProvider","children","_s","setUser","currentUser","getCurrentUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coreyzhao/quickapply-frontend/frontend/src/context/AuthContext.tsx"],"sourcesContent":["// src/context/AuthContext.tsx\nimport React, { createContext, useState, useEffect, ReactNode } from 'react';\nimport authService from '../services/authService';\n\n\ninterface User {\n  id: string;\n  username: string;\n  password: string;\n  email: string;\n  commonLinks: any[];\n  jobIds: any[];\n  authorities: { authority: string }[];\n  userId: {\n    timestamp: number;\n    date: string;\n  };\n  accountNonExpired: boolean;\n  accountNonLocked: boolean;\n  credentialsNonExpired: boolean;\n  enabled: boolean;\n  accessToken?: string;\n}\n\ninterface AuthResponse {\n  user: User;\n  jwt: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  \n}\n\nexport const AuthContext = createContext<AuthContextType>({\n  user: null,\n \n});\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nconst AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser();\n    setUser(currentUser);\n  }, []);\n\n  \n\n  return (\n    <AuthContext.Provider value={{ user }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAC5E,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgClD,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAkB;EACxDO,IAAI,EAAE;AAER,CAAC,CAAC;AAMF,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACH,IAAI,EAAEI,OAAO,CAAC,GAAGV,QAAQ,CAAc,IAAI,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAGT,WAAW,CAACU,cAAc,CAAC,CAAC;IAChDF,OAAO,CAACC,WAAW,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAIN,oBACEP,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAER;IAAK,CAAE;IAAAE,QAAA,EACnCA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACT,EAAA,CAfIF,YAAyC;AAAAY,EAAA,GAAzCZ,YAAyC;AAiB/C,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
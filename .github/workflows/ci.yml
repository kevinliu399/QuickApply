name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-backend:
    name: Build and Test Spring Boot Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build Docker Image for Backend
        run: |
          docker build \
            --file backend/Dockerfile \
            --target build \
            --tag backend-build:latest \
            --build-arg MONGO_DATABASE=${{ secrets.MONGO_DATABASE }} \
            --build-arg MONGO_USER=${{ secrets.MONGO_USER }} \
            --build-arg MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            --build-arg MONGO_CLUSTER=${{ secrets.MONGO_CLUSTER }} \
            ./backend
      
      - name: Run All Tests with Verbose Output
        run: |
          docker run --rm \
            -e MONGO_DATABASE=${{ secrets.MONGO_DATABASE }} \
            -e MONGO_USER=${{ secrets.MONGO_USER }} \
            -e MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            -e MONGO_CLUSTER=${{ secrets.MONGO_CLUSTER }} \
            backend-build:latest \
            mvn test -Dtest=com.QuickApply.QuickApply.** -Dsurefire.useFile=false -e -X
        continue-on-error: true
      
      - name: Print Test Reports
        if: failure()
        run: |
          docker run --rm -v ${PWD}:/app backend-build:latest cat /app/target/surefire-reports/*.txt || echo "No reports found"
      
      - name: Build Production Docker Image for Backend
        if: success()
        run: |
          docker build \
            --file backend/Dockerfile \
            --tag backend:latest \
            --build-arg MONGO_DATABASE=${{ secrets.MONGO_DATABASE }} \
            --build-arg MONGO_USER=${{ secrets.MONGO_USER }} \
            --build-arg MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            --build-arg MONGO_CLUSTER=${{ secrets.MONGO_CLUSTER }} \
            ./backend

  build-frontend:
    name: Build and Test React Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build Docker Image for Frontend
        run: docker build --file frontend/Dockerfile --tag frontend-build:latest ./frontend
      
      - name: Build Production Docker Image for Frontend
        run: docker build --file frontend/Dockerfile --tag frontend:latest ./frontend

  # deploy:
  #   name: Deploy Application
  #   runs-on: ubuntu-latest
  #   needs: [build-backend, build-frontend]
  #   steps:
  #     - name: Deploy to Production
  #       run: echo "Add your deployment steps here"
name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-backend:
    name: Build and Test Spring Boot Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image for Backend
        run: docker build --file backend/Dockerfile --target build --tag backend-build:latest ./backend

      - name: Run All Tests with Verbose Output
        run: |
          docker run --rm backend-build:latest mvn test -Dtest=com.QuickApply.QuickApply.** -Dsurefire.useFile=false -e -X
      - name: Print Test Output
        if: failure()
        run: cat test-output.txt
      - name: Build Production Docker Image for Backend
        if: success()
        run: docker build --file backend/Dockerfile --tag backend:latest ./backend

  build-frontend:
    name: Build and Test React Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image for Frontend
        run: docker build --file frontend/Dockerfile --tag frontend-build:latest ./frontend

      - name: Build Production Docker Image for Frontend
        run: docker build --file frontend/Dockerfile --tag frontend:latest ./frontend

  # deploy:
  #   name: Deploy Application
  #   runs-on: ubuntu-latest
  #   needs: [build-backend, build-frontend]
  #   steps:
  #     - name: Deploy to Production
  #       run: echo "Add your deployment steps here"
